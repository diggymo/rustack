<mxfile host="65bd71144e">
    <diagram id="aul5IFUKA8XRQZymiXtf" name="ページ1">
        <mxGraphModel dx="1059" dy="472" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
            <root>
                <mxCell id="0"/>
                <mxCell id="1" parent="0"/>
                <mxCell id="19" style="edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.25;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="2" target="15">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="2" value="parse_word&lt;br&gt;&lt;br&gt;&lt;span style=&quot;font-size: 11px; background-color: rgb(255, 255, 255);&quot;&gt;{の場合、追加&lt;/span&gt;&lt;span style=&quot;font-size: 11px; background-color: rgb(255, 255, 255);&quot;&gt;（ルートスタックではないのでblock）&lt;/span&gt;&lt;br style=&quot;border-color: var(--border-color); font-size: 11px;&quot;&gt;&lt;span style=&quot;font-size: 11px; background-color: rgb(255, 255, 255);&quot;&gt;}の場合、blockを1つ取得しブロックをeval&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 11px; background-color: rgb(255, 255, 255);&quot;&gt;数字の場合→Num変換してeval&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 11px; background-color: rgb(255, 255, 255);&quot;&gt;`/`からはじまる場合→Symに変換してeval&lt;/span&gt;&lt;span style=&quot;font-size: 11px; background-color: rgb(255, 255, 255);&quot;&gt;&lt;br&gt;それ以外の場合→Opに変換してeval&lt;br&gt;&lt;/span&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
                    <mxGeometry x="354" y="190" width="306" height="130" as="geometry"/>
                </mxCell>
                <mxCell id="5" style="edgeStyle=none;html=1;entryX=0.008;entryY=0.4;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="1" source="3" target="2">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="3" value="parse_batch" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
                    <mxGeometry x="130" y="130" width="120" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="6" style="edgeStyle=none;html=1;entryX=0;entryY=0.75;entryDx=0;entryDy=0;" edge="1" parent="1" source="4" target="2">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="4" value="parse_interactive" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
                    <mxGeometry x="130" y="290" width="120" height="60" as="geometry"/>
                </mxCell>
                <mxCell id="15" value="eval&lt;br&gt;Opだったらvm.varsから値取得。NativeOpだったら即時実行、Block（自前定義の関数）なら中身を順次eval&lt;br&gt;&lt;span style=&quot;font-size: 11px; background-color: rgb(255, 255, 255);&quot;&gt;それ以外はstackにpush()&lt;br&gt;&lt;/span&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
                    <mxGeometry x="354" y="380" width="616" height="130" as="geometry"/>
                </mxCell>
                <mxCell id="17" value="&lt;h1&gt;ブロック（{ 1 2 + }）の評価フロー&lt;/h1&gt;&lt;p&gt;1. `{` が評価され、vm.blocksが追加される&lt;br&gt;2. `1` が評価され、vm.blocks.last()にpush&lt;br&gt;3. `2` が評価され、vm.blocks.last()にpush&lt;br&gt;4. `+` が評価され、vm.blocks.last()にpush（ブロック内なので関数実行されない）&lt;br&gt;5. `}` が評価され、vm.blocks.last()をまとめてstackに移動&lt;br&gt;6. stack = [ Block([1, 2, &quot;+&quot;]) となる&lt;/p&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
                    <mxGeometry x="30" y="540" width="510" height="140" as="geometry"/>
                </mxCell>
                <mxCell id="18" value="&lt;h1&gt;ブロック（/a { 1 2 + } def a a ）の評価フロー&lt;/h1&gt;&lt;p&gt;1. `/a` が評価され、vm.stackに追加される&lt;br&gt;2. `{ ~ }` が評価され、vm.stackにBlockとして追加される&lt;br&gt;3. `def` が評価され、vm.varsに`Block({ ~ })`が保存される・vm.stackから/aと{ ~ }は消える&lt;br&gt;（stack = [], vars = {a: Block({~})}, blocks = []）&lt;br&gt;4. `a` が評価され、vm.varsから取得され同時に実行される&lt;br&gt;（stack = [3], vars = {a: Block({~})}, blocks = []）&lt;br&gt;5. `a` が評価され、vm.varsから取得され同時に実行される&lt;br&gt;（stack = [3, 3], vars = {a: Block({~})}, blocks = []）&lt;br&gt;&lt;/p&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
                    <mxGeometry x="20" y="720" width="510" height="180" as="geometry"/>
                </mxCell>
            </root>
        </mxGraphModel>
    </diagram>
</mxfile>